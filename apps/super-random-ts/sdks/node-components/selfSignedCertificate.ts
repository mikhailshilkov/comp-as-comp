// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SelfSignedCertificate extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'node-components:index:SelfSignedCertificate';

    /**
     * Returns true if the given object is an instance of SelfSignedCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SelfSignedCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SelfSignedCertificate.__pulumiType;
    }

    public /*out*/ readonly caCert!: pulumi.Output<string>;
    public /*out*/ readonly pem!: pulumi.Output<string>;
    public /*out*/ readonly privateKey!: pulumi.Output<string>;

    /**
     * Create a SelfSignedCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SelfSignedCertificateArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.localValidityPeriodHours === undefined) && !opts.urn) {
                throw new Error("Missing required property 'localValidityPeriodHours'");
            }
            if ((!args || args.subject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subject'");
            }
            if ((!args || args.validityPeriodHours === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validityPeriodHours'");
            }
            resourceInputs["algorithm"] = args ? args.algorithm : undefined;
            resourceInputs["allowedUses"] = args ? args.allowedUses : undefined;
            resourceInputs["dnsName"] = args ? args.dnsName : undefined;
            resourceInputs["ecdsaCurve"] = args ? args.ecdsaCurve : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["localValidityPeriodHours"] = args ? args.localValidityPeriodHours : undefined;
            resourceInputs["rsaBits"] = args ? args.rsaBits : undefined;
            resourceInputs["subject"] = args ? args.subject : undefined;
            resourceInputs["validityPeriodHours"] = args ? args.validityPeriodHours : undefined;
            resourceInputs["caCert"] = undefined /*out*/;
            resourceInputs["pem"] = undefined /*out*/;
            resourceInputs["privateKey"] = undefined /*out*/;
        } else {
            resourceInputs["caCert"] = undefined /*out*/;
            resourceInputs["pem"] = undefined /*out*/;
            resourceInputs["privateKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SelfSignedCertificate.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a SelfSignedCertificate resource.
 */
export interface SelfSignedCertificateArgs {
    algorithm?: pulumi.Input<string>;
    allowedUses?: pulumi.Input<string[]>;
    dnsName?: pulumi.Input<string>;
    ecdsaCurve?: pulumi.Input<string>;
    ipAddress?: pulumi.Input<string>;
    localValidityPeriodHours: pulumi.Input<number>;
    rsaBits?: pulumi.Input<number>;
    subject: inputs.SelfSignedCertSubjectArgs;
    validityPeriodHours: pulumi.Input<number>;
}
